(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4393],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,g=c["".concat(s,".").concat(d)]||c[d]||h[d]||o;return a?n.createElement(g,i(i({ref:t},u),{},{components:a})):n.createElement(g,i({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6179:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var n=a(2122),r=a(9756),o=(a(7294),a(3905)),i=["components"],l={title:"Subgraph Uncrashable by Float",sidebar_label:"Subgraph Uncrashable",slug:"/subgragh-uncrashable"},s=void 0,p={permalink:"/blog/subgragh-uncrashable",source:"@site/blog/2022-12-15-subgraph-uncrashable-by-float.md",title:"Subgraph Uncrashable by Float",description:"Subgraph Uncrashable by Float",date:"2022-12-15T00:00:00.000Z",formattedDate:"December 15, 2022",tags:[],readingTime:5.4,truncated:!0,prevItem:{title:"The Arctic Games are back for round 2",permalink:"/blog/arctic-games-round-2"},nextItem:{title:"Float Integrates Chainlink Price Feeds to Help Power Leveraged Tokens & Chainlink VRF for On-Chain Randomness",permalink:"/blog/chainlink-powers-float-arctic-and-apmsc"}},u=[{value:"Subgraph Uncrashable by Float",id:"subgraph-uncrashable-by-float",children:[]},{value:"Background",id:"background",children:[{value:"Graph Grant",id:"graph-grant",children:[]}]},{value:"Why integrate with Subgraph Uncrashable?",id:"why-integrate-with-subgraph-uncrashable",children:[{value:"Continuous Uptime",id:"continuous-uptime",children:[]},{value:"Completely Safe",id:"completely-safe",children:[]},{value:"User Configurable",id:"user-configurable",children:[]}]},{value:"Key Features",id:"key-features",children:[]},{value:"Installation",id:"installation",children:[{value:"Graph CLI",id:"graph-cli",children:[]},{value:"Standalone npm package",id:"standalone-npm-package",children:[]}]},{value:"Support",id:"support",children:[]},{value:"About Graph Foundation",id:"about-graph-foundation",children:[]},{value:"About Float",id:"about-float",children:[]}],h={toc:u};function c(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("img",{src:"/blog-assets/subgraph-uncrashable/subgraph-morgan.jpg",alt:"ap morgan graph",width:"100%"}),(0,o.kt)("h2",{id:"subgraph-uncrashable-by-float"},"Subgraph Uncrashable by Float"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://float-capital.github.io/float-subgraph-uncrashable/"},"Subgraph Uncrashable")," by Float is a ",(0,o.kt)("strong",{parentName:"p"},"code generation tool")," that integrates with any subgraph and ensures continuous uptime of your subgraph by making your subgraph uncrashable \ud83d\ude80"),(0,o.kt)("h2",{id:"background"},"Background"),(0,o.kt)("p",null,"The team behind Float has been building subgraphs for several years. First for\xa0",(0,o.kt)("a",{parentName:"p",href:"https://wildcards.world/"},"wildcards.world"),", and since then, they have been contracted to build out multiple production critical graphs for clients (as\xa0",(0,o.kt)("a",{parentName:"p",href:"http://avolabs.io/"},"avolabs.io"),") and most recently for their own protocol,\xa0",(0,o.kt)("a",{parentName:"p",href:"https://float.capital/"},"Float"),"."),(0,o.kt)("p",null,"Through working extensively with subgraphs, the Float team has found strategies to make subgraphs more developer safe by implementing a variety of helper functions that make many classes of common developer mistakes impossible. These helper functions have been greatly inspired by pure-functional programming languages, and have been used with great effect in developing and upgrading Float\u2019s subgraphs."),(0,o.kt)("p",null,"Some common developer mistakes seen repeatedly in subgraph development are issues of loading undefined entities, not setting or initializing all values of entities and race conditions on loading and saving entities.  A subgraph crashing due to mishandling of entities (in our experience this is 99% of all developer issues) can render your UI or any other service that relies on the subgraph, unavailable or unusable by your end users, and in turn lead to adverse business impacts. "),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://float-capital.github.io/float-subgraph-uncrashable/"},"Subgraph Uncrashable")," completely abstracts the need for subgraph developers to call\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"new Entity"),",\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Entity.load"),"and\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Entity.save()"),"functions which are all inherently error prone. Using our helper functions these common developer pitfalls will become impossible."),(0,o.kt)("p",null,"Integrating your subgraph with Subgraph Uncrashable ensures your subgraph is type safe. This is achieved by generating a set of helper functions from the graphql schema of the project that ensure all interactions with entities in the graph are completely safe. "),(0,o.kt)("h3",{id:"graph-grant"},"Graph Grant"),(0,o.kt)("p",null,"In August 2022, the Float team decided that the use of this tool would benefit any subgraph developer and ultimately benefit overall Graph ecosystem, and applied for a grant with The Graph Foundation. After successful application, Float received funding to decouple the tool from its current hard-coded integration, package the code generation tool into a stand-alone application, open-source it, and integrate with the\xa0",(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/docs/en/cookbook/quick-start/"},"Graph CLI"),"."),(0,o.kt)("p",null,"\ud83c\udf89\xa0",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://thegraph.com/blog/wave-six-grants/"},"The Graph Foundation Allocates Nearly $1M in Wave 6 of Grants"))," \ud83c\udf89"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u201cCredits are owed to the amazing team running The Graph Foundation Grants Program. Float is extremely grateful to be contributing to the graph ecosystem and providing builders with more confidence in their subgraph development.\u201d - ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/JasoonSmythe"},"Jason Smythe"),", Co-Founder at Float")),(0,o.kt)("h2",{id:"why-integrate-with-subgraph-uncrashable"},"Why integrate with Subgraph Uncrashable?"),(0,o.kt)("h3",{id:"continuous-uptime"},"Continuous Uptime"),(0,o.kt)("p",null,"Mishandled entities cause subgraphs to crash, which can be very disruptive for projects that are dependent on the graph. Set up helper functions to make your subgraphs \u201cuncrashable\u201d and ensure business continuity."),(0,o.kt)("center",null,(0,o.kt)("img",{src:"/blog-assets/subgraph-uncrashable/rocket.png",alt:"rocket.png",width:"30%"})),(0,o.kt)("h3",{id:"completely-safe"},"Completely Safe"),(0,o.kt)("p",null,"Common developer problems seen in subgraph development are issues of loading undefined entities, not setting or initializing all values of entities, and race conditions on loading and saving entities. Ensure all interactions with entities are completely atomic."),(0,o.kt)("center",null,(0,o.kt)("img",{src:"/blog-assets/subgraph-uncrashable/astronaut.png",alt:"astronaut.png",width:"30%"})),(0,o.kt)("h3",{id:"user-configurable"},"User Configurable"),(0,o.kt)("p",null,"Set default values and configure the level of security checks that suits your individual project's needs. Warning logs are recorded indicating where there is a breach of subgraph logic to help patch the issue to ensure data accuracy."),(0,o.kt)("center",null,(0,o.kt)("img",{src:"/blog-assets/subgraph-uncrashable/asteroid.png",alt:"asteroid.png",width:"30%"})),(0,o.kt)("h2",{id:"key-features"},"Key Features"),(0,o.kt)("p",null,"The code generation tool accommodates ",(0,o.kt)("strong",{parentName:"p"},"all subgraph types")," and is configurable for users to set sane defaults on values. The code generation will use this config to generate helper functions that are to the users specification."),(0,o.kt)("p",null,"The framework also includes a way (via the config file) to create custom but safe setter functions for groups of entity variables. This way it is impossible for the user to load/use a stale graph entity and it is also impossible to forget to save or set a variable that is required by the function."),(0,o.kt)("p",null,"Warning logs are recorded as logs indicating where there is a breach of subgraph logic to help patch the issue to ensure data accuracy. These logs can be viewed in the The Graph's hosted service under the 'Logs' section."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Subgraph Uncrashable is available as a standalone npm package or using the Graph CLI as an optional flag."),(0,o.kt)("h3",{id:"graph-cli"},"Graph CLI"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"graph codegen [options] [<subgraph-manifest>]"),(0,o.kt)("br",null)),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Options:"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-h, --help                        Show usage information"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-o, --output-dir <path>           Output directory for generated types (default:    generated/)"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"--skip-migrations                 Skip subgraph migrations (default: false)"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-w, --watch                       Regenerate types when subgraph files change (default: false)"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-u, --uncrashable                 Generate Float Subgraph Uncrashable helper file"),(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"-uc, --uncrashable-config <path>  Directory for uncrashable config (default: ./uncrashable-config.yaml)"),(0,o.kt)("br",null)),(0,o.kt)("p",null,"Run the graph uncrashable codegen via the Graph CLI:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"graph codegen -u")),(0,o.kt)("h3",{id:"standalone-npm-package"},"Standalone npm package"),(0,o.kt)("h4",{id:"npm"},"npm"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm install @float-capital/float-subgraph-uncrashable")),(0,o.kt)("h4",{id:"yarn"},"Yarn"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"yarn add @float-capital/float-subgraph-uncrashable")),(0,o.kt)("p",null,"Run the graph uncrashable codegen as a standalone package:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"uncrashable")),(0,o.kt)("p",null,"Any project building or upgrading a subgraph can use this tool to make their subgraphs \u201cuncrashable\u201d and ensure continuous uptime \ud83d\ude80"),(0,o.kt)("p",null,"Watch this video tutorial for a demo on installing and configuring Subgraph Uncrashable against an example subgraph."),(0,o.kt)("center",null,(0,o.kt)("iframe",{width:"100%",height:"450",src:"https://www.youtube.com/embed/6FaC44njxzU",title:"Subgraph Uncrashable Tutorial | Shipped by Float",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),(0,o.kt)("h2",{id:"support"},"Support"),(0,o.kt)("p",null,"If you require any support installing, configuring or using the tool, please feel free to send the Float team a message in the discussions section of the\xa0",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Float-Capital/float-subgraph-uncrashable"},"float-subgraph-uncrashable"),"\xa0repository on Github."),(0,o.kt)("p",null,"If you would like to contribute to this project or if you have identified a bug / issue with the tool, please feel free to visit the contribution guidelines in the\xa0",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Float-Capital/float-subgraph-uncrashable"},"float-subgraph-uncrashable"),"\xa0repository on Github. Pull requests submitted that do not follow the guidelines will not be reviewed and/or merged."),(0,o.kt)("h2",{id:"about-graph-foundation"},"About Graph Foundation"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/"},"The Graph")," is the indexing and query layer of web3. Developers build and publish open APIs, called subgraphs, that applications can query using GraphQL. The Graph currently supports indexing data from over 39 different networks"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/blog/announcing-the-graph-foundation/"},"The Graph Foundation")," oversees The Graph Network. The Graph Foundation is overseen by the\xa0",(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/blog/inaugurating-council-and-grants/"},"Technical Council"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"https://edgeandnode.com/"},"Edge & Node"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"https://streamingfast.io/"},"StreamingFast"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"http://figment.io/"},"Figment"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"https://www.semiotic.ai/"},"Semiotic"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"https://the-guild.dev/"},"The Guild"),",\xa0",(0,o.kt)("a",{parentName:"p",href:"https://messari.io/"},"Messari"),"and\xa0",(0,o.kt)("a",{parentName:"p",href:"https://graphops.xyz/"},"GraphOps")," are seven of the many organizations within The Graph ecosystem."),(0,o.kt)("h2",{id:"about-float"},"About Float"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://float.capital/app/markets?chain=137"},"Float")," is a novel derivatives protocol for minting leveraged tokens on chain, with no liquidations, no over-collaterization and no margin maintenance. Leveraged returns in one click."),(0,o.kt)("p",null,"Get live updates, new features, opportunities and shitposts on our\xa0",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/float_shipping"},"Twitter"),"."),(0,o.kt)("p",null,"Or, meet the team, claim your gem role, and hang out in our\xa0",(0,o.kt)("a",{parentName:"p",href:"http://discord.gg/float-capital"},"Discord"),"."),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("center",null,(0,o.kt)("img",{src:"/blog-assets/subgraph-uncrashable/byfloat.png",alt:"byfloatlogo",width:"30%"})))}c.isMDXComponent=!0}}]);
(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5927],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(r),f=a,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9870:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],c={id:"architecture",title:"Architecture",sidebar_label:"Architecture",slug:"/architecture"},l=void 0,u={unversionedId:"architecture",id:"architecture",isDocsHomePage:!1,title:"Architecture",description:"NOTE: These docs are under active development \ud83d\udc77\u200d\u2640\ufe0f\ud83d\udc77",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/docs/architecture",editUrl:"https://github.com/Float-Capital/docs/architecture.md",version:"current",frontMatter:{id:"architecture",title:"Architecture",sidebar_label:"Architecture",slug:"/architecture"},sidebar:"someSidebar",previous:{title:"Morgan mode",permalink:"/docs/morgan-mode"},next:{title:"Security",permalink:"/docs/security"}},s=[],p={toc:s};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("sub",null,(0,o.kt)("sup",null," NOTE: These docs are under active development \ud83d\udc77\u200d\u2640\ufe0f\ud83d\udc77 ")),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MarketCore.sol")),(0,o.kt)("p",null,"This contract contains all the core logic related to the market: such as minting and redeeming, the value transfer between pools and calculating funding. This is the most important contract in Float Arctic."),(0,o.kt)("p",null,"Since a single contract was too large for deployment, the market contract is split into 2 parts. MarketCore is the core logic of the system. It doubles as a proxy (via an EIP-1967 proxy) and contains all the functions for initialization and administrator functionality like adding new pools. This enables the flexibility of an UUPS upgrade pattern without increasing gas costs of the common/core contract functions."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MarketExtended.sol")),(0,o.kt)("p",null,"This contract contains non-core market functions that are rarely used, like intial pool setup and parameter configuration, enabling lower gas costs."),(0,o.kt)("img",{src:"/doc-assets/market-contract-structure.png",alt:"market contract structure",width:"100%"}),(0,o.kt)("sub",null,"Figure: structure of the market contracts prepared for the Float Arctic audit."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"OracleManager.sol")),(0,o.kt)("p",null,"This contract validates that the oracle IDs passed in for execution/upkeep are valid then returns the prices for executing the value change. Any attempt to manipulate this contract or bypass its check could result in an erroneous value transfer."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MarketLiquidityManagerSimple.sol")),(0,o.kt)("p",null,"This is a very simple contract. It just holds all the collateral."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PoolToken.sol")),(0,o.kt)("p",null,"This is a modified ERC20 token contract to create a tokenised vault."))}d.isMDXComponent=!0}}]);